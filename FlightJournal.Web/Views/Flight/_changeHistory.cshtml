@using FlightJournal.Web
@using FlightJournal.Web.Extensions
@model IEnumerable<FlightJournal.Web.Models.FlightVersionHistory>

@helper TruncateDate(DateTime input)
{
    if (input.Year == DateTime.Today.Year)
    {
        @(input.ToString("ddd. ") + input.ToString("m"));
    }
    else
    {
        @input.ToShortDateString()
    }
}

@{
    ViewBag.Title = "Startlisten / Historik";
}
<br/>

<fieldset>
    <legend>@_("Change history")</legend>

    <table class="table table-striped table-hover table-condensed">
        <tr>
            <th>
                @_("Timestamp")
            </th>
            <th>
                @_("User")
            </th>
            <th>
                @_("Date")
            </th>
            <th>
                @_("Plane")
            </th>
            <th>
                @_("Pilots")
            </th>
            <th>
                @_("Departure")
            </th>
            <th>
                @_("Landing")
            </th>
            <th>
                @_("Take-off method")
            </th>
            <th>
                @_("Take-off")
            </th>
            <th>
                @_("Tacho")
            </th>
            <th>
                @_("Comment")
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model)
        {

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastUpdatedBy)
                </td>
                <td>
                    @TruncateDate(item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Plane)
                </td>
                <td>
                    @if (item.Pilot != null)
                    {
                        @item.Pilot.Name
                        if (item.PilotBackseat != null)
                        {
                            <text>/ </text>
                            @item.PilotBackseat.Name
                        }
                        if ((item.Betaler != null) && (item.Betaler != item.Pilot))
                        {
                            @Html.Raw(string.Format(" " + _("(paid by {0})"), item.Betaler.Name))
                        }
                        if ((item.Betaler == null) && (item.Pilot != null))
                        {
                            <text> </text>
                            @_("(missing payer)")
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Departure)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Landing)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartedFrom.Name)
                    @if ((item.LandedOn != null) && (item.LandedOn.Name != item.StartedFrom.Name))
                    {
                        <text>, </text>
                        @Html.DisplayFor(modelItem => item.LandedOn.Name)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TachoDeparture)
                    @if (item.TachoDeparture.HasValue && item.TachoLanding.HasValue)
                    {
                        <text> / </text>
                    }
                    @Html.DisplayFor(modelItem => item.TachoLanding)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description, "Description")
                </td>
                <td>
                    @if (@item.State != "Added")
                    {
                        @item.State
                    }
                </td>
            </tr>
        }
    </table>
</fieldset>
<p>
    <div class="btn-group">
        @if (User.IsEditor())
        {
            @Html.ActionLink("Rediger", "Edit", new { id = ViewBag.FlightId }, new { @class = "btn btn-default" })
        }
        <a href="javascript:window.history.back();" class="btn btn-default">Tilbage</a>
    </div>
</p>