@using System.Web.Razor.Parser
@using FlightJournal.Web
@using FlightJournal.Web.Controllers
@using FlightJournal.Web.Extensions
@using FlightJournal.Web.Models
@using Microsoft.Ajax.Utilities

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    @*<link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,700" rel="stylesheet" type="text/css">*@
    @Styles.Render("~/Content/css")
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
    @Scripts.Render("~/bundles/modernizr")
    @RenderSection("head", required: false)
    @Html.Action("GoogleAnalyticsPartial", "About")
</head>
<body>
@if (ApplicationConfiguration.Config != AppConfig.CFG_RELEASE)
{
    <div class="alert alert-danger alert-dismissable show text-center floatingalert">Dette er en demo- eller udviklingsversion - <b>må IKKE bruges til virkelige flyvninger</b>, da data kan forsvinde uden varsel
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button></div>
}
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="@Url.Action("Index", "About")">
                    <span class="fa-stack">
                        <i class="fa fa-square-o fa-stack-2x" style="color: #008eda"></i>
                        <i class="fa fa-plane fa-stack-1x"></i>
                    </span>
                    @if (Request.IsClub())
                    {
                        <span class="hidden-sm">@Request.Club().Name</span>
                        <span class="hidden-xs hidden-md hidden-lg">@Request.Club().ShortName</span>
                    }
                    else
                    {
                        @:Startlist.club
                    }
                </a>
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">

                    <li>@Html.MenuLink(_("Day Report"), "Index", "Report")</li>
                    @if (!Request.IsClub() && Request.IsPilot())
                    {
                        <li>@Html.ActionLink(_("Day Report") + " (" + Request.Pilot().Club.ShortName + ")", "Index", "Report", new { club = Request.Pilot().Club.ShortName }, null)</li>
                    }
                    @if (Request.IsAuthenticated)
                    {
                        if (Request.IsClub())
                        {
                            <li>@Html.MenuLink(_("Startlist"), "Grid", "Flight")</li>
                        }
                        else if (Request.IsPilot())
                        {
                            <li>@Html.ActionLink(_("Startlist ({0})", Request.Pilot().Club.ShortName), "Grid", "Flight", new { club = Request.Pilot().Club.ShortName }, null)</li>
                        }
                    }
                    @if (User.IsPilot())
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">@_("Logbook") <b class="caret"></b></a>
                            <ul class="dropdown-menu">
                                @if (Request.Club().ClubId == User.Pilot().Club.ClubId)
                                {
                                    <li>@Html.MenuLink(_("Logbook", Request.Pilot().Club.ShortName), "Index", "Logbook", new { club = Request.Pilot().Club.ShortName })</li>
                                }
                                else
                                {
                                    <li>@Html.MenuLink(_("Logbook"), "Index", "Logbook", new { club = Request.Pilot().Club.ShortName })</li>
                                }
                                @if (User.IsManager() || (Request.IsPilot() && Request.Pilot().IsInstructor))
                                {
                                    <li>@Html.MenuLink(_("Barometer status"), "BaroStatus", "Logbook", new { club = Request.Pilot().Club.ShortName })</li>
                                }
                                <li>@Html.MenuLink(_("Training flights"), "Index", "TrainingLogHistory")</li>
                                <li>@Html.MenuLink(_("Training status"), "Index", "TrainingStatus")</li>
                            </ul>
                        </li>
                    }
                    @if (Request.IsClub() && !string.IsNullOrWhiteSpace(Request.Club().Website) && !User.IsEditor())
                    {
                        <li><a href="@Request.Club().Website" class="hidden-sm">@Request.Club().Website.Replace("http://", string.Empty).Replace("www.", string.Empty)</a></li>
                    }
                    @if (!Request.IsAuthenticated)
                    {
                        <li>@Html.MenuLink(_("About startlist.club"), "Index", "About")</li>
                    }

                    @if (User.IsEditor())
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">@_("Settings") <b class="caret"></b></a>
                            <ul class="dropdown-menu">
                                <li>@Html.MenuLink(@_("Planes"), "Index", "Plane")</li>
                                <li>@Html.MenuLink(@_("Locations"), "Index", "Location")</li>
                                @if (User.IsManager())
                                {
                                    <li>@Html.MenuLink(_("Pilots"), "Index", "Pilot")</li>
                                }
                                @if (User.IsAdministrator())
                                {
                                    <li class="divider"></li>
                                    <li>@Html.MenuLink(_("Roles"), "Index", "RolesAdmin")</li>
                                    <li>@Html.MenuLink(_("Users"), "Index", "UsersAdmin")</li>
                                    <li class="divider"></li>
                                    <li>@Html.MenuLink(_("Startmethods"), "Index", "StartType")</li>
                                    <li>@Html.MenuLink(_("Clubs"), "Index", "Club")</li>
                                    <li class="divider"></li>
                                    <li>@Html.MenuLink(_("Training programs"), "Index", "TrainingProgramAdmin")</li>
                                    <li>@Html.MenuLink(_("Flight manouvres"), "Index", "ManouvreAdmin")</li>
                                    <li>@Html.MenuLink(_("Flight comments"), "Index", "CommentaryAdmin")</li>
                                    <li>@Html.MenuLink(_("Flight phases"), "Index", "CommentaryTypeAdmin")</li>
                                    <li>@Html.MenuLink(_("Gradings"), "Index", "GradingAdmin")</li>
                                }
                            </ul>
                        </li>
                    }
                    @if (!User.IsPilot() && Request.IsAuthenticated)
                    {
                        <li>@Html.MenuLink(_("[Create relation to pilotprofile]"), "ManagePilotBinding", "Manage")</li>
                    }
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    @if (User.IsPilot() && Request.Club().ClubId != User.Pilot().Club.ClubId)
                    {
                        <li>
                            <a href="javascript:document.getElementById('goHomeForm').submit()"><i class="fa fa-users"></i> @User.Pilot().Club.ShortName</a>
                            @using (Html.BeginForm("SetCurrentClub", "Club", FormMethod.Post, new { id = "goHomeForm", Style = "display:none;" }))
                            {
                                <input type="hidden" name="shortName" value="@User.Pilot().Club.ShortName" />
                            }
                        </li>
                    }
                    @Html.Partial("_LoginPartial")
                    @Html.Partial("_LanguagePartial")
                    <li><a href="#" id="showhelp"><i class="fa fa-question-circle" title=@Html.Raw(__("Guided tour"))></i></a></li>
                </ul>
            </div>
        </div>
    </div>
<div class="container body-content">
    @RenderSection("featured", required: false)
    @RenderBody()
</div>

@if (ViewBag.DeveloperInfo != null && User.IsAdministrator())
{
    <div id="developerinfo" style="display: none;">
        <hr />
        @foreach (var info in ViewBag.DeveloperInfo)
        {
            <span class="small">@info</span>   <br />
        }
    </div>
}

<div class="container footer-content">
    <footer>
        <p class="pull-right btn-xs">

            @if (ViewBag.DeveloperInfo != null && User.IsAdministrator())
            {
                <i class="fa fa-info-circle" id="showdeveloperinfo"></i>
            }
            &copy; <a href="@Url.Action("Index", "About")">@_("About") startlist.club</a> <span class="glyphicon glyphicon-stats"></span>&nbsp; @DateTime.Now.ToString("f")
        </p>
        @Html.Action("ClubSelector", "Club")
    </footer>
</div>


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryui")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/intro")
@Scripts.Render("~/bundles/datatables")
@RenderSection("scripts", required: false)


<script type="text/javascript">

    $(document).ready(function() {
        if ($(".tourable").length > 0) {
            var intro = introJs();
            intro.setOption("exitOnEsc", true);
            intro.setOption("keyboardNavigation", true);
            intro.setOption("hidePrev", true);
            intro.setOption("hideNext", true);
            intro.setOption("scrollToElement", true);
            intro.setOption("disableInteraction", true);
            intro.setOption("exitOnOverlayClick", false);
            intro.setOption("showBullets", false);
            intro.setOption("showStepNumbers", false);
            intro.setOption("tooltipPosition", "auto");

            intro.setOption("nextLabel", @Html.Raw(__("Next >")));
            intro.setOption("prevLabel", @Html.Raw(__("< Prev")));
            intro.setOption("skipLabel", @Html.Raw(__("Skip")));
            intro.setOption("doneLabel", @Html.Raw(__("Done")));

            $("#showhelp").click(function() {
                // show intro tooltips only for visible elements
                $("[data-intro]:hidden").each(function() {
                    var $t = $(this);
                    $t.attr({ 'data-intro-hidden': $t.attr('data-intro') }).removeAttr('data-intro');
                });
                $("[data-intro-hidden]:visible").each(function() {
                    var $t = $(this);
                    $t.attr({ 'data-intro': $t.attr('data-intro-hidden') }).removeAttr('data-intro-hidden');
                });

                intro.start();
            });
        } else {
            $("#showhelp").hide();
        }

        $("#showdeveloperinfo").on("click", function() {
            $("#developerinfo").show();
        });
    });


    var isHidden = false;
    var reloadOnVisibilityRecoveryIfOnSafari = function () {
        // Safari / iOS is apparently not good at retaining signalR connection across visibily transitions, so brute-force a reload when recovering (user may still cancel)
        var isIOS = /iPad|iPhone|iPod/.test(navigator.platform);
        if (isIOS) {
            document.addEventListener("visibilitychange", () => {
                if (document.hidden) {
                    isHidden = true;
                } else {
                    if (isHidden) {
                        isHidden = false; // probably redundant, but...
                        location.reload();
                    }
                }
            })
        };
    };

</script>


</body>
</html>
